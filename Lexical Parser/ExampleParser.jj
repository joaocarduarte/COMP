options {
    IGNORE_CASE = true;
    LOOKAHEAD = 1;
}

PARSER_BEGIN(ExampleParser)

public class ExampleParser {
    public static void main(String args[]) throws ParseException, java.io.FileNotFoundException {
        ExampleParser parser;
        parser = new ExampleParser(System.in);
        parser.start();
      }
}

PARSER_END(ExampleParser)

SKIP : {
  " "
  | "\t"
  | "\n"
  | "\r"
}

//Reserved words
TOKEN: {
    <NAME: "\"" "name" "\"">
    | <CHILDREN: "\"""children""\"">
    | <CONTENT: "\"""content""\"">
    | <CODE: "\"" "code" "\"">
}

TOKEN: {
     <STRING_NAME_CONTENT: "\"" (("\"" (["a"-"z", "A"-"Z", " ", "0"-"9"])* "\"")  | ("==") | ("_++") | ("_--")

     | ( ("<")?  (["a"-"z", " ", "A"-"Z", "0"-"9"])* (">")?)(("("(["a"-"z", "A"-"Z"](["a"-"z", "A"-"Z", "0"-"9"])*("," [" ","a"-"z", "A"-"Z"](["a"-"z", "A"-"Z", "0"-"9"])*)*)* ")")* | ("."   ["a"-"z", "A"-"Z"](["a"-"z", "A"-"Z", "0"-"9"])*  )*))*"\"" >
     | <STRING_CODE: "\"" "(" ("/"(["a"-"z", " ", "A"-"Z", "0"-"9"])+)+ "." (["a"-"z", "A"-"Z", "0"-"9"])+ ":" (["0"-"9"])+ ")" "\"" >
}

void start() : {} {
  expr() <EOF>
}

void expr() : {} {

  "{" <NAME> ":" <STRING_NAME_CONTENT> ","
  (<CONTENT> ":" <STRING_NAME_CONTENT> ",")?
  (<CODE> ":" <STRING_CODE> ",")?
  (<CHILDREN> ":"   "[" (expr())? "]" "," )? "}" ("," expr())?
}
